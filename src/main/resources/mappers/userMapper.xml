<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMapper">
	<!-- 회원가입 -->
	<insert id="addUser">
		INSERT INTO USER(USER_ID, PASSWORD, NAME, EMAIL)
		VALUES (#{userID}, #{password}, #{name}, #{email})
	</insert>
	
	<!-- 로그인 -->
	<select id="login" resultType="com.giens.springboard.vo.UserVO">
		SELECT USER_ID as userID
			, PASSWORD
		FROM USER
		WHERE USER_ID = #{userID}	
	</select>
	
	<!-- 사용자 상세 -->
	<select id="getUser" resultType="com.giens.springboard.vo.UserVO">
		SELECT USER_ID as userID
			, NAME
			, PASSWORD
			, EMAIL
			, DATE_FORMAT(REG_DATE, '%Y-%m-%d') as regDate
			, ACTIVE
			, DEL_FLAG as delFlag
			, (SELECT R.ROLE_ID 
			   FROM ROLE_MANAGEMENT RM 
				   JOIN ROLE R 
			   ON RM.ROLE_ID = R.ROLE_ID 
			   WHERE RM.USER_ID = U.USER_ID) as role
		FROM USER U
		WHERE USER_ID = #{userID}
	</select>
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="Integer">
		SELECT COUNT(0) as id_check_value
		FROM USER
		WHERE USER_ID = #{userID}
	</select>
	
	<!-- 사용자 목록 -->
	<select id="userList" parameterType="com.giens.springboard.vo.SearchCriteria" resultType="com.giens.springboard.vo.UserVO">
		SELECT USER_ID as userID
			, NAME
			, PASSWORD
			, EMAIL
			, DATE_FORMAT(REG_DATE, '%Y-%m-%d %H:%i:%s') as regDate
			, ACTIVE
			, DEL_FLAG as delFlag		
		FROM USER
		WHERE 1=1
			AND DEL_FLAG = 'N'
			<include refid="searchOption"></include>
		ORDER BY REG_DATE DESC, DEL_FLAG DESC
		LIMIT #{rowStart}, #{perPageNum}		
	</select>
	
	<!-- 사용자 목록 개수 -->
	<select id="countUserList" parameterType="com.giens.springboard.vo.SearchCriteria" resultType="Integer">
		SELECT COUNT(*)
		FROM USER
		WHERE 1=1
			<include refid="searchOption"></include>
	</select>
	
	<!-- 로그인 히스토리 목록 -->
	<select id="loginHistoryList" parameterType="com.giens.springboard.vo.SearchCriteria" resultType="com.giens.springboard.vo.LoginHistoryVO">
		SELECT LOG_ID as rowNo
			, USER_ID as userID
			, DATE_FORMAT(LOGIN_TIME, '%Y-%m-%d %H:%i:%s') as loginTime
			, DATE_FORMAT(LOGOUT_TIME, '%Y-%m-%d %H:%i:%s') as logoutTime
			, IP_ADDRESS as ipAddress
		FROM LOG_HISTORY
		WHERE 1=1
			<include refid="searchOption"></include>
		ORDER BY LOG_ID DESC
		LIMIT #{rowStart}, #{perPageNum}		
	</select>
	
	<!-- 로그인 히스토리 목록 개수 -->
	<select id="countLoginHistoryList" parameterType="com.giens.springboard.vo.SearchCriteria" resultType="Integer">
		SELECT COUNT(*)
		FROM LOG_HISTORY
		WHERE 1=1
			<include refid="searchOption"></include>
	</select>
	
	<!-- 검색옵션 -->
	<sql id="searchOption">
		<if test="searchType != null">
			<if test="searchType == 'name'.toString()">AND NAME LIKE CONCAT('%',#{keyword},'%')</if>
			<if test="searchType == 'userID'.toString()">AND USER_ID LIKE CONCAT('%',#{keyword},'%')</if>
		</if>
	</sql>
	
	<!-- 로그인 히스토리 등록 -->
	<insert id="insertLoginHistory">
		INSERT INTO LOG_HISTORY(USER_ID, IP_ADDRESS)
		VALUES (#{userID}, #{ipAddress})
	</insert>
	
	<!-- 로그아웃 히스토리 등록 -->
	<update id="updateLoginHistory">
		UPDATE LOG_HISTORY
		SET LOGOUT_TIME = NOW()
		WHERE USER_ID = #{userID}
			and LOGOUT_TIME is null
	</update>	
	
	<!-- 사용자 삭제 -->
	<update id="deleteUser">
		UPDATE USER
		SET DEL_FLAG = 'Y'
		WHERE USER_ID = #{userID}
	</update>
	
	<insert id="addRole">
		INSERT INTO ROLE_MANAGEMENT(USER_ID, ROLE_ID)
		VALUES (#{userID}, #{role})
	</insert>
</mapper>